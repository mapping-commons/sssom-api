#!/usr/bin/env bash
# 
# This script indexes the solr.json which is generated by dumps data pipeline
# Whenever you need to index or re-index your data you can use this script.

while getopts h:p:c: flag
do
    case "${flag}" in
        h) host=${OPTARG};;
        p) port=${OPTARG};;
        c) collection=${OPTARG};;
        *) echo "!!! Invalid flag. Only -h and -p flags are supported."
    esac
done

echo "Indexing $collection in server $host:$port"
curl --location --request POST "http://$host:$port/solr/$collection/update/json?commit=true" --header 'Content-Type: application/json' --data-binary '@dump.jsonld'
# curl "http://$host:$port/solr/$collection/update/json/docs"\
# '?split=/mappings'\
# '&f=mapping_set_id:/mapping_set_id'\
# '&f=license:/license'\
# '&f=mapping_set_description:/mapping_set_description'\
# '&f=mapping_provider:/mapping_provider'\
# '&f=mapping_justification:/mappings/mapping_justification'\
# '&f=subject_id:/mappings/subject_id'\
# '&f=predicate_id:/mappings/predicate_id'\
# '&f=object_id:/mappings/object_id'\
# '&f=subject_label:/mappings/subject_label'\
# '&f=object_label:/mappings/object_label'\
# '&echo=true'\
#  -H 'Content-type:application/json' --data-binary '@dump.jsonld'

# '{
#  "set": {
#  "my_params": {
#  "split": "/mappings",
#  "f": ["mapping_set_id:/mapping_set_id","license:/license","mapping_set_description:/mapping_set_description","mapping_provider:/mapping_provider","mapping_justification:/mappings/mapping_justification", "subject_id:/mappings/subject_id", "subject_label:/mappings/subject_label", "predicate_id:/mappings/predicate_id", "object_id:/mappings/object_id", "object_label:/mappings/object_label"]
#  }}}'